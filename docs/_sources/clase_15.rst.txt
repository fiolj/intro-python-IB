.. _clase_15:

Clase 15: Módulos, Pandas y Animaciones
========================================


Importando módulos
------------------

Python tiene reglas para la importación de módulos a nuestro código.
Recordemos que un módulo es un archivo cuya extensión es ``.py``.
Volviendo a usar el ejemplo de la clase anterior, tenemos un módulo
``rotacion_p.py``.

1. En primer lugar, el intérprete busca un módulo denominado
   ``rotación_p`` dentro de los módulos incorporados automáticamente. La
   lista de dichos módulos se encuentra usando el método
   ``sys.builtin_module_names``:

.. code:: python

    import sys 
    sys.builtin_module_names




.. parsed-literal::

    ('_abc',
     '_ast',
     '_codecs',
     '_collections',
     '_functools',
     '_imp',
     '_io',
     '_locale',
     '_operator',
     '_signal',
     '_sre',
     '_stat',
     '_string',
     '_symtable',
     '_thread',
     '_tokenize',
     '_tracemalloc',
     '_typing',
     '_warnings',
     '_weakref',
     'atexit',
     'builtins',
     'errno',
     'faulthandler',
     'gc',
     'itertools',
     'marshal',
     'posix',
     'pwd',
     'sys',
     'time')



.. code:: python

    'rotacion_p' in sys.builtin_module_names




.. parsed-literal::

    False



2. En segundo lugar, busca un archivo ``rotacion_p.py`` en una lista de
   directorios dada por el atributo ``sys.path``.

.. code:: python

    sys.path




.. parsed-literal::

    ['/Users/flavioc/Library/Mobile Documents/com~apple~CloudDocs/Documents/cursos/Python/GitLab/clase-python/clases',
     '/Users/flavioc/miniconda3/envs/clases/lib/python312.zip',
     '/Users/flavioc/miniconda3/envs/clases/lib/python3.12',
     '/Users/flavioc/miniconda3/envs/clases/lib/python3.12/lib-dynload',
     '',
     '/Users/flavioc/miniconda3/envs/clases/lib/python3.12/site-packages']



Este atributo contiene el directorio local (el primero que aparece en la
lista de arriba), y una serie de directorios que provienen de - La
variable de entorno ``PYTHONPATH`` - Un directorio dependiente de la
instalación (en este caso,
’/Users/flavioc/miniconda3/envs/clases/lib/python3.12\`).

La manera pythonística de chequear si la variable de entorno
``PYTHONPATH`` existe es utilizar el método ``get`` de ``os.environ``:

.. code:: python

    import os
    os.environ.get('PYTHONPATH')

En nuestro caso no imprime nada, pero de la misma forma se puede setear
dicha variable de entorno:

.. code:: python

    os.environ['PYTHONPATH'] = '..' # seteo la variable PYTHONPATH al directorio padre del directorio actual
    os.environ.get('PYTHONPATH')




.. parsed-literal::

    '..'



Por supuesto, todo va a depender de cómo tenemos estructurado nuestro
código. En principio, aún cuando uno no utilice completamente las
facilidades de Python como lenguaje orientado a objeto, agrupamos
funciones que están relacionadas entre sí en distintos módulos. A medida
que el código crece, es posible organizar los distintos módulos
distribuyéndolos en directorios.

Importando módulos de directorios hijos
---------------------------------------

Imaginemos que tenemos la siguente estructura de código:

::

   /miproyecto
       main.py
       /lib
           rotacion.py
       /graficos 
           simple.py
           complejo.py 
           /tresd
           vector.py

Es sencillo importar los módulos en los directorios hijos (``lib``,
``graficos``):

.. code:: python

   from graficos.simple import plot_data
   from graficos.complejo import plot_data_complejo as plot_complejo 
   from graficos.tresd.vector import *
   from lib.rotacion import rotate

Básicamente exponemos el módulo usando el operador ``.`` para ir
incorporando los hijos. Por ejemplo, ``graficos.tresd.vector`` refiere
al módulo que se encuentra en el archivo ``vector.py`` en el directorio
``graficos.tresd``.

Importando módulos desde padres o hermanos
------------------------------------------

Imports relativos
~~~~~~~~~~~~~~~~~

Para importar módulos que están en directorios padres o hermanos (estos
últimos son directorios al mismo nivel del directorio desde el cual
quiero importar) podemos diferentes estrategias. La primera de ellas es
usar la importación de paquetes relativos. Para ello, cada directorio
desde el que quiera importar debe poseer un archivo (en principio vacío)
denominado ``__init__.py``. Esto permite a Python reconocer los
directorios que contienen módulos aún cuando sean padres o hermanos.

Veamos ahora la estructura de directorios de ``miproyecto_relativo`` con
los archivos ``__init__.py`` agregados:

::

   /miproyecto
       main.py
       __init__.py
       /lib
           rotacion.py
           __init__.py
       /graficos 
           __init__.py
           simple.py
           complejo.py 
           /tresd
           __init__.py
           vector.py
       /tests
           test_rotacion.py

Notemos que ``tests/test_rotacion.py`` tiene también un ``main``, que
corre un test:

.. code:: python

   def test_rotacion():
     v = np.array([1, 0, 0])
     angle = np.array([0, 0, np.pi/2])
     assert np.allclose(rotate(angle, v), np.array([0, -1, 0]))


   if __name__ == "__main__":
     test_rotacion()
     print("All tests passed")  

Esta es una estructura típica de Python, donde tengo tests que prueban
funciones en un módulo dado. Notemos cómo se importa el módulo
``rotacion`` desde ``test_rotacion.py``:

.. code:: python

   from ..lib.rotacion import rotate

Al igual que con directorios, ``..`` se refiere al directorio padre
relativo al directorio actual.

Si probamos **desde el directorio** ``miproyecto/tests`` lo siguiente:

.. code:: bash

   python test_rotacion.py

Nos encontraremos con el error:

.. code:: python

   ImportError: attempted relative import with no known parent package

Para correr el test, tenemos que ir al directorio **padre** del proyecto
y correr el main del módulo explícitamente:

.. code:: bash

   python -m miproyecto_relativo.tests.test_rotacion
   All tests passed

Modificando ``sys.path``
~~~~~~~~~~~~~~~~~~~~~~~~

La forma anterior puede ser engorrosa en el caso en que se tengan muchos
módulos en archivos distribuidos en una estructura de directorios
complicada. Por otra parte, es posible modificar el atributo
``sys.path`` para incluir el directorio que sea de interés. En este
caso, modificamos ``test_rotacion.py``:

.. code:: python

   import sys
   import os
   sys.path.append(os.path.join(os.path.dirname(__file__), ".."))
   from lib.rotacion import rotate

Entonces, podemos correr desde el directorio ``tests``:

.. code:: bash

   python test_rotacion.py
   All tests passed

o desde su padre como

.. code:: bash

   python -m tests.test_rotacion

o

.. code:: bash

   python tests/test_rotacion.py


Pandas
------

``Pandas`` es una biblioteca de Python ampliamente utilizada para
análisis de datos y manipulación de datos tabulares. Proporciona
estructuras de datos potentes y flexibles, como DataFrame y Series, que
son fundamentales para trabajar con conjuntos de datos.

   No es la única biblioteca de Python para manejar tablas de datos,
   pueden consultar otras como `Polars <https://pola.rs/>`__,
   `DuckDB <https://duckdb.org/>`__, etc. Pero se ha convertido en un
   módulo muy popular.

La instalamos como siempre

.. code:: bash

   pip install pandas

.. code:: python

    import pandas as pd

Pandas tiene dos tipos fundamentales de estructuras de datos:

a. ``DataFrame``: Una estructura de datos tabular bidimensional con
   etiquetas en filas y columnas.

b. ``Series``: Un arreglo unidimensional etiquetado capaz de contener
   cualquier tipo de datos.

.. code:: python

    # Crear una Serie a partir de una lista
    s = pd.Series([1, 2, 3, 4, 5])
    print(s)


.. parsed-literal::

    0    1
    1    2
    2    3
    3    4
    4    5
    dtype: int64


Notar que el ``print`` ya muestra los datos en forma adecuada, indicando
los índices (columna de la izquierda) y el tipo de dato de la serie.

.. code:: python

    s.index, s.values




.. parsed-literal::

    (RangeIndex(start=0, stop=5, step=1), array([1, 2, 3, 4, 5]))



.. code:: python

    import numpy as np 
    
    s_np = s.array # cast de la serie a un arreglo de numpy.
    print(s_np)
    np.sum(s_np)


.. parsed-literal::

    <PandasArray>
    [1, 2, 3, 4, 5]
    Length: 5, dtype: int64




.. parsed-literal::

    15



.. code:: python

    # Crear un DataFrame a partir de un diccionario
    data = {'Nombre': ['Juan', 'María', 'Pedro', 'Ana'],
            'Edad': [25, 30, 35, 40]}
    df = pd.DataFrame(data)
    print(df)


.. parsed-literal::

      Nombre  Edad
    0   Juan    25
    1  María    30
    2  Pedro    35
    3    Ana    40


Podemos agregar columnas como

.. code:: python

    df['Ocupacion'] = ['Estudiante', 'Ingeniera', 'Doctor', 'Profesora']
    print(df)


.. parsed-literal::

      Nombre  Edad   Ocupacion
    0   Juan    25  Estudiante
    1  María    30   Ingeniera
    2  Pedro    35      Doctor
    3    Ana    40   Profesora


Y podemos agregar una nueva fila:

.. code:: python

    eva = pd.DataFrame({'Nombre': ['Eva'], 'Edad': [28], 'Ocupacion': ['Ingeniera']})
    df = pd.concat([df,eva], ignore_index=True)
    print(df)


.. parsed-literal::

      Nombre  Edad   Ocupacion
    0   Juan    25  Estudiante
    1  María    30   Ingeniera
    2  Pedro    35      Doctor
    3    Ana    40   Profesora
    4    Eva    28   Ingeniera


.. note:: 
  
     En versiones anteriores de pandas a 2.0, existe una método
     ``.append``. Sin embargo, ese método ya no está visible en la clase.
  
  ..
  
     Notar también que cada valor del diccionario es una lista. Si se
     eligiera usar los correspondientes valores escalares, es necesario
     indicar el índice en el cual se quiere concatenar la fila:
  
  

.. code:: python

    lio = pd.DataFrame({'Nombre': 'Lionel', 'Edad': 37, 'Ocupacion': 'Futbolista'})
    df = pd.concat([df,eva], ignore_index=True)
    print(df)


::


    ---------------------------------------------------------------------------

    ValueError                                Traceback (most recent call last)

    Cell In[8], line 1
    ----> 1 lio = pd.DataFrame({'Nombre': 'Lionel', 'Edad': 37, 'Ocupacion': 'Futbolista'})
          2 df = pd.concat([df,eva], ignore_index=True)
          3 print(df)


    File /usr/lib64/python3.11/site-packages/pandas/core/frame.py:664, in DataFrame.__init__(self, data, index, columns, dtype, copy)
        658     mgr = self._init_mgr(
        659         data, axes={"index": index, "columns": columns}, dtype=dtype, copy=copy
        660     )
        662 elif isinstance(data, dict):
        663     # GH#38939 de facto copy defaults to False only in non-dict cases
    --> 664     mgr = dict_to_mgr(data, index, columns, dtype=dtype, copy=copy, typ=manager)
        665 elif isinstance(data, ma.MaskedArray):
        666     import numpy.ma.mrecords as mrecords


    File /usr/lib64/python3.11/site-packages/pandas/core/internals/construction.py:493, in dict_to_mgr(data, index, columns, dtype, typ, copy)
        489     else:
        490         # dtype check to exclude e.g. range objects, scalars
        491         arrays = [x.copy() if hasattr(x, "dtype") else x for x in arrays]
    --> 493 return arrays_to_mgr(arrays, columns, index, dtype=dtype, typ=typ, consolidate=copy)


    File /usr/lib64/python3.11/site-packages/pandas/core/internals/construction.py:118, in arrays_to_mgr(arrays, columns, index, dtype, verify_integrity, typ, consolidate)
        115 if verify_integrity:
        116     # figure out the index, if necessary
        117     if index is None:
    --> 118         index = _extract_index(arrays)
        119     else:
        120         index = ensure_index(index)


    File /usr/lib64/python3.11/site-packages/pandas/core/internals/construction.py:656, in _extract_index(data)
        653         raise ValueError("Per-column arrays must each be 1-dimensional")
        655 if not indexes and not raw_lengths:
    --> 656     raise ValueError("If using all scalar values, you must pass an index")
        658 elif have_series:
        659     index = union_indexes(indexes)


    ValueError: If using all scalar values, you must pass an index


Si en lugar de la lista, utilizamos un valor escalar tenemos que decirle
en qué lugar (índice) queremos agregar el elemento

.. code:: python

    lio = pd.DataFrame({'Nombre': 'Lionel', 'Edad': 37, 'Ocupacion': 'Futbolista'}, index=[14])
    df = pd.concat([df,lio])
    print(df)


.. parsed-literal::

        Nombre  Edad   Ocupacion
    0     Juan    25  Estudiante
    1    María    30   Ingeniera
    2    Pedro    35      Doctor
    3      Ana    40   Profesora
    4      Eva    28   Ingeniera
    14  Lionel    37  Futbolista


Notemos que si usamos ``ignore_index=True``, la fila se agrega al final
del ``DataFrame``, mientras que si no lo usamos
(``ignore_index=False``), se mantiene el indice provisto por el
dataframe particular (en este caso, ``14``).

.. code:: python

    print(df.head(2))


.. parsed-literal::

      Nombre  Edad   Ocupacion
    0   Juan    25  Estudiante
    1  María    30   Ingeniera


Es fácil guardar los datos:

.. code:: python

    df.to_csv('../data/lista_gente.csv', index=False)

.. code:: python

    !cat ../data/lista_gente.csv


.. parsed-literal::

    Nombre,Edad,Ocupacion
    Juan,25,Estudiante
    María,30,Ingeniera
    Pedro,35,Doctor
    Ana,40,Profesora
    Eva,28,Ingeniera
    Lionel,37,Futbolista


Del mismo modo, se puede leer un csv:

.. code:: python

    tasa_natalidad = pd.read_csv('../data/tasa-natalidad.csv')
    # print(tasa_natalidad)
    tasa_natalidad




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>indice_tiempo</th>
          <th>natalidad_argentina</th>
          <th>natalidad_ciudad_autonoma_de_buenos_aires</th>
          <th>natalidad_buenos_aires</th>
          <th>natalidad_catamarca</th>
          <th>natalidad_cordoba</th>
          <th>natalidad_corrientes</th>
          <th>natalidad_chaco</th>
          <th>natalidad_chubut</th>
          <th>natalidad_entre_rios</th>
          <th>...</th>
          <th>natalidad_neuquen</th>
          <th>natalidad_rio_negro</th>
          <th>natalidad_salta</th>
          <th>natalidad_san_juan</th>
          <th>natalidad_san_luis</th>
          <th>natalidad_santa_cruz</th>
          <th>natalidad_santa_fe</th>
          <th>natalidad_santiago_del_estero</th>
          <th>natalidad_tucuman</th>
          <th>natalidad_tierra_del_fuego</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>2000</td>
          <td>19.0</td>
          <td>14.3</td>
          <td>17.5</td>
          <td>25.8</td>
          <td>17.2</td>
          <td>22.7</td>
          <td>25.8</td>
          <td>19.4</td>
          <td>21.3</td>
          <td>...</td>
          <td>17.9</td>
          <td>18.9</td>
          <td>24.0</td>
          <td>22.7</td>
          <td>22.3</td>
          <td>19.6</td>
          <td>16.9</td>
          <td>21.6</td>
          <td>22.6</td>
          <td>19.9</td>
        </tr>
        <tr>
          <th>1</th>
          <td>2001</td>
          <td>18.2</td>
          <td>13.9</td>
          <td>16.9</td>
          <td>24.9</td>
          <td>15.9</td>
          <td>21.9</td>
          <td>22.2</td>
          <td>18.4</td>
          <td>20.5</td>
          <td>...</td>
          <td>16.8</td>
          <td>17.8</td>
          <td>24.2</td>
          <td>23.7</td>
          <td>22.3</td>
          <td>19.8</td>
          <td>16.2</td>
          <td>21.1</td>
          <td>21.1</td>
          <td>17.9</td>
        </tr>
        <tr>
          <th>2</th>
          <td>2002</td>
          <td>18.3</td>
          <td>13.6</td>
          <td>17.0</td>
          <td>24.4</td>
          <td>16.6</td>
          <td>23.3</td>
          <td>24.9</td>
          <td>17.1</td>
          <td>19.5</td>
          <td>...</td>
          <td>16.1</td>
          <td>17.3</td>
          <td>24.7</td>
          <td>22.3</td>
          <td>22.0</td>
          <td>19.2</td>
          <td>16.7</td>
          <td>22.1</td>
          <td>22.6</td>
          <td>17.2</td>
        </tr>
        <tr>
          <th>3</th>
          <td>2003</td>
          <td>18.4</td>
          <td>14.2</td>
          <td>17.3</td>
          <td>22.5</td>
          <td>17.5</td>
          <td>22.2</td>
          <td>20.9</td>
          <td>18.7</td>
          <td>19.8</td>
          <td>...</td>
          <td>19.4</td>
          <td>18.6</td>
          <td>22.0</td>
          <td>22.2</td>
          <td>21.7</td>
          <td>21.9</td>
          <td>17.3</td>
          <td>17.8</td>
          <td>21.8</td>
          <td>20.8</td>
        </tr>
        <tr>
          <th>4</th>
          <td>2004</td>
          <td>19.3</td>
          <td>14.9</td>
          <td>18.5</td>
          <td>20.6</td>
          <td>17.8</td>
          <td>22.7</td>
          <td>25.1</td>
          <td>19.3</td>
          <td>19.5</td>
          <td>...</td>
          <td>19.8</td>
          <td>18.3</td>
          <td>23.9</td>
          <td>22.5</td>
          <td>21.9</td>
          <td>22.4</td>
          <td>17.6</td>
          <td>19.7</td>
          <td>21.0</td>
          <td>19.5</td>
        </tr>
        <tr>
          <th>5</th>
          <td>2005</td>
          <td>18.5</td>
          <td>14.5</td>
          <td>17.9</td>
          <td>19.7</td>
          <td>17.1</td>
          <td>20.2</td>
          <td>22.6</td>
          <td>19.2</td>
          <td>19.0</td>
          <td>...</td>
          <td>20.0</td>
          <td>18.7</td>
          <td>22.5</td>
          <td>21.4</td>
          <td>19.9</td>
          <td>22.9</td>
          <td>16.3</td>
          <td>21.0</td>
          <td>19.9</td>
          <td>20.7</td>
        </tr>
        <tr>
          <th>6</th>
          <td>2006</td>
          <td>17.9</td>
          <td>14.6</td>
          <td>17.7</td>
          <td>18.3</td>
          <td>16.5</td>
          <td>18.7</td>
          <td>19.6</td>
          <td>20.0</td>
          <td>17.2</td>
          <td>...</td>
          <td>20.5</td>
          <td>18.6</td>
          <td>21.0</td>
          <td>20.7</td>
          <td>20.2</td>
          <td>23.5</td>
          <td>15.8</td>
          <td>20.0</td>
          <td>18.5</td>
          <td>20.1</td>
        </tr>
        <tr>
          <th>7</th>
          <td>2007</td>
          <td>17.8</td>
          <td>14.1</td>
          <td>17.7</td>
          <td>18.3</td>
          <td>16.3</td>
          <td>18.9</td>
          <td>18.4</td>
          <td>20.2</td>
          <td>16.9</td>
          <td>...</td>
          <td>20.5</td>
          <td>18.9</td>
          <td>20.6</td>
          <td>20.8</td>
          <td>19.3</td>
          <td>23.8</td>
          <td>15.7</td>
          <td>19.4</td>
          <td>19.7</td>
          <td>20.8</td>
        </tr>
        <tr>
          <th>8</th>
          <td>2008</td>
          <td>18.8</td>
          <td>15.1</td>
          <td>18.6</td>
          <td>18.6</td>
          <td>17.4</td>
          <td>19.7</td>
          <td>20.8</td>
          <td>21.4</td>
          <td>17.2</td>
          <td>...</td>
          <td>21.0</td>
          <td>19.9</td>
          <td>21.4</td>
          <td>20.7</td>
          <td>19.3</td>
          <td>25.0</td>
          <td>16.9</td>
          <td>20.5</td>
          <td>19.9</td>
          <td>20.8</td>
        </tr>
        <tr>
          <th>9</th>
          <td>2009</td>
          <td>18.6</td>
          <td>14.6</td>
          <td>18.4</td>
          <td>17.4</td>
          <td>17.4</td>
          <td>19.9</td>
          <td>20.4</td>
          <td>21.3</td>
          <td>17.5</td>
          <td>...</td>
          <td>20.9</td>
          <td>19.6</td>
          <td>21.0</td>
          <td>20.6</td>
          <td>18.2</td>
          <td>25.2</td>
          <td>16.5</td>
          <td>21.9</td>
          <td>19.1</td>
          <td>20.2</td>
        </tr>
        <tr>
          <th>10</th>
          <td>2010</td>
          <td>18.7</td>
          <td>14.9</td>
          <td>18.9</td>
          <td>16.9</td>
          <td>17.2</td>
          <td>19.8</td>
          <td>21.2</td>
          <td>21.2</td>
          <td>17.4</td>
          <td>...</td>
          <td>21.6</td>
          <td>20.0</td>
          <td>21.9</td>
          <td>19.8</td>
          <td>17.4</td>
          <td>26.0</td>
          <td>16.2</td>
          <td>19.9</td>
          <td>20.1</td>
          <td>18.8</td>
        </tr>
        <tr>
          <th>11</th>
          <td>2011</td>
          <td>18.5</td>
          <td>14.8</td>
          <td>18.8</td>
          <td>16.0</td>
          <td>16.9</td>
          <td>19.9</td>
          <td>22.6</td>
          <td>20.7</td>
          <td>17.2</td>
          <td>...</td>
          <td>19.6</td>
          <td>19.8</td>
          <td>21.7</td>
          <td>19.9</td>
          <td>16.7</td>
          <td>25.0</td>
          <td>16.4</td>
          <td>20.2</td>
          <td>19.5</td>
          <td>18.6</td>
        </tr>
        <tr>
          <th>12</th>
          <td>2012</td>
          <td>17.9</td>
          <td>14.2</td>
          <td>18.1</td>
          <td>15.0</td>
          <td>16.5</td>
          <td>18.6</td>
          <td>20.2</td>
          <td>20.2</td>
          <td>16.7</td>
          <td>...</td>
          <td>19.1</td>
          <td>19.4</td>
          <td>20.2</td>
          <td>19.6</td>
          <td>16.0</td>
          <td>24.0</td>
          <td>16.3</td>
          <td>17.9</td>
          <td>18.7</td>
          <td>19.2</td>
        </tr>
        <tr>
          <th>13</th>
          <td>2013</td>
          <td>17.9</td>
          <td>14.3</td>
          <td>17.8</td>
          <td>16.9</td>
          <td>16.0</td>
          <td>19.0</td>
          <td>19.9</td>
          <td>18.5</td>
          <td>17.3</td>
          <td>...</td>
          <td>18.7</td>
          <td>17.9</td>
          <td>21.1</td>
          <td>20.6</td>
          <td>16.7</td>
          <td>19.7</td>
          <td>16.9</td>
          <td>18.8</td>
          <td>18.9</td>
          <td>19.8</td>
        </tr>
        <tr>
          <th>14</th>
          <td>2014</td>
          <td>18.2</td>
          <td>14.3</td>
          <td>17.9</td>
          <td>17.4</td>
          <td>16.8</td>
          <td>19.8</td>
          <td>20.2</td>
          <td>17.8</td>
          <td>17.8</td>
          <td>...</td>
          <td>19.5</td>
          <td>17.9</td>
          <td>21.6</td>
          <td>21.3</td>
          <td>16.9</td>
          <td>19.8</td>
          <td>17.2</td>
          <td>19.8</td>
          <td>19.3</td>
          <td>20.5</td>
        </tr>
        <tr>
          <th>15</th>
          <td>2015</td>
          <td>17.9</td>
          <td>13.7</td>
          <td>17.3</td>
          <td>17.2</td>
          <td>16.4</td>
          <td>19.3</td>
          <td>22.7</td>
          <td>17.4</td>
          <td>17.8</td>
          <td>...</td>
          <td>19.1</td>
          <td>18.2</td>
          <td>21.3</td>
          <td>20.5</td>
          <td>17.0</td>
          <td>19.8</td>
          <td>16.9</td>
          <td>20.5</td>
          <td>19.0</td>
          <td>19.9</td>
        </tr>
        <tr>
          <th>16</th>
          <td>2016</td>
          <td>16.7</td>
          <td>13.1</td>
          <td>16.2</td>
          <td>16.7</td>
          <td>15.7</td>
          <td>18.5</td>
          <td>19.1</td>
          <td>16.6</td>
          <td>16.6</td>
          <td>...</td>
          <td>17.9</td>
          <td>16.8</td>
          <td>19.4</td>
          <td>18.8</td>
          <td>15.5</td>
          <td>18.6</td>
          <td>16.3</td>
          <td>18.7</td>
          <td>17.5</td>
          <td>18.1</td>
        </tr>
        <tr>
          <th>17</th>
          <td>2017</td>
          <td>16.0</td>
          <td>11.7</td>
          <td>15.4</td>
          <td>15.8</td>
          <td>15.0</td>
          <td>18.3</td>
          <td>19.8</td>
          <td>15.3</td>
          <td>16.3</td>
          <td>...</td>
          <td>16.3</td>
          <td>16.0</td>
          <td>19.7</td>
          <td>18.1</td>
          <td>14.8</td>
          <td>17.0</td>
          <td>15.4</td>
          <td>18.8</td>
          <td>16.7</td>
          <td>16.9</td>
        </tr>
        <tr>
          <th>18</th>
          <td>2018</td>
          <td>15.4</td>
          <td>11.6</td>
          <td>14.6</td>
          <td>16.4</td>
          <td>14.5</td>
          <td>18.0</td>
          <td>21.0</td>
          <td>14.3</td>
          <td>15.6</td>
          <td>...</td>
          <td>15.6</td>
          <td>14.6</td>
          <td>18.2</td>
          <td>17.7</td>
          <td>14.2</td>
          <td>14.7</td>
          <td>14.8</td>
          <td>18.9</td>
          <td>16.9</td>
          <td>16.3</td>
        </tr>
      </tbody>
    </table>
    <p>19 rows × 26 columns</p>
    </div>



Operaciones
~~~~~~~~~~~

Pandas provee de numerosos métodos para realizar operaciones sobre los
datos de un DataFrame.

.. code:: python

    tasa_natalidad.head(2)




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>indice_tiempo</th>
          <th>natalidad_argentina</th>
          <th>natalidad_ciudad_autonoma_de_buenos_aires</th>
          <th>natalidad_buenos_aires</th>
          <th>natalidad_catamarca</th>
          <th>natalidad_cordoba</th>
          <th>natalidad_corrientes</th>
          <th>natalidad_chaco</th>
          <th>natalidad_chubut</th>
          <th>natalidad_entre_rios</th>
          <th>...</th>
          <th>natalidad_neuquen</th>
          <th>natalidad_rio_negro</th>
          <th>natalidad_salta</th>
          <th>natalidad_san_juan</th>
          <th>natalidad_san_luis</th>
          <th>natalidad_santa_cruz</th>
          <th>natalidad_santa_fe</th>
          <th>natalidad_santiago_del_estero</th>
          <th>natalidad_tucuman</th>
          <th>natalidad_tierra_del_fuego</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>2000</td>
          <td>19.0</td>
          <td>14.3</td>
          <td>17.5</td>
          <td>25.8</td>
          <td>17.2</td>
          <td>22.7</td>
          <td>25.8</td>
          <td>19.4</td>
          <td>21.3</td>
          <td>...</td>
          <td>17.9</td>
          <td>18.9</td>
          <td>24.0</td>
          <td>22.7</td>
          <td>22.3</td>
          <td>19.6</td>
          <td>16.9</td>
          <td>21.6</td>
          <td>22.6</td>
          <td>19.9</td>
        </tr>
        <tr>
          <th>1</th>
          <td>2001</td>
          <td>18.2</td>
          <td>13.9</td>
          <td>16.9</td>
          <td>24.9</td>
          <td>15.9</td>
          <td>21.9</td>
          <td>22.2</td>
          <td>18.4</td>
          <td>20.5</td>
          <td>...</td>
          <td>16.8</td>
          <td>17.8</td>
          <td>24.2</td>
          <td>23.7</td>
          <td>22.3</td>
          <td>19.8</td>
          <td>16.2</td>
          <td>21.1</td>
          <td>21.1</td>
          <td>17.9</td>
        </tr>
      </tbody>
    </table>
    <p>2 rows × 26 columns</p>
    </div>



.. code:: python

    tasa_natalidad["natalidad_rio_negro"].mean()




.. parsed-literal::

    18.273684210526316



.. code:: python

    for v,d,i in zip(tasa_natalidad.columns, tasa_natalidad.max(),tasa_natalidad.idxmax()):
        provincia = v.split('_')[1]
        print(f"la tasa máxima {d} de {provincia} ocurrió en {i}")


.. parsed-literal::

    la tasa máxima 2018.0 de tiempo ocurrió en 18
    la tasa máxima 19.3 de argentina ocurrió en 4
    la tasa máxima 15.1 de ciudad ocurrió en 8
    la tasa máxima 18.9 de buenos ocurrió en 10
    la tasa máxima 25.8 de catamarca ocurrió en 0
    la tasa máxima 17.8 de cordoba ocurrió en 4
    la tasa máxima 23.3 de corrientes ocurrió en 2
    la tasa máxima 25.8 de chaco ocurrió en 0
    la tasa máxima 21.4 de chubut ocurrió en 8
    la tasa máxima 21.3 de entre ocurrió en 0
    la tasa máxima 26.5 de formosa ocurrió en 4
    la tasa máxima 23.1 de jujuy ocurrió en 1
    la tasa máxima 18.3 de la ocurrió en 3
    la tasa máxima 22.6 de la ocurrió en 0
    la tasa máxima 20.2 de mendoza ocurrió en 8
    la tasa máxima 26.4 de misiones ocurrió en 4
    la tasa máxima 21.6 de neuquen ocurrió en 10
    la tasa máxima 20.0 de rio ocurrió en 10
    la tasa máxima 24.7 de salta ocurrió en 2
    la tasa máxima 23.7 de san ocurrió en 1
    la tasa máxima 22.3 de san ocurrió en 0
    la tasa máxima 26.0 de santa ocurrió en 10
    la tasa máxima 17.6 de santa ocurrió en 4
    la tasa máxima 22.1 de santiago ocurrió en 2
    la tasa máxima 22.6 de tucuman ocurrió en 0
    la tasa máxima 20.8 de tierra ocurrió en 3


Nótese que la primer columna ‘indice_tiempo’ también la toma como una
columna de datos, cuando en realidad, en este caso convendría que fuera
efectivamente la columna que indexa la tabla. Para eso, tenemos
``set_index``.

.. code:: python

    tasa_natalidad.set_index('indice_tiempo',inplace=True)
    tasa_natalidad.head(3)




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>natalidad_argentina</th>
          <th>natalidad_ciudad_autonoma_de_buenos_aires</th>
          <th>natalidad_buenos_aires</th>
          <th>natalidad_catamarca</th>
          <th>natalidad_cordoba</th>
          <th>natalidad_corrientes</th>
          <th>natalidad_chaco</th>
          <th>natalidad_chubut</th>
          <th>natalidad_entre_rios</th>
          <th>natalidad_formosa</th>
          <th>...</th>
          <th>natalidad_neuquen</th>
          <th>natalidad_rio_negro</th>
          <th>natalidad_salta</th>
          <th>natalidad_san_juan</th>
          <th>natalidad_san_luis</th>
          <th>natalidad_santa_cruz</th>
          <th>natalidad_santa_fe</th>
          <th>natalidad_santiago_del_estero</th>
          <th>natalidad_tucuman</th>
          <th>natalidad_tierra_del_fuego</th>
        </tr>
        <tr>
          <th>indice_tiempo</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>2000</th>
          <td>19.0</td>
          <td>14.3</td>
          <td>17.5</td>
          <td>25.8</td>
          <td>17.2</td>
          <td>22.7</td>
          <td>25.8</td>
          <td>19.4</td>
          <td>21.3</td>
          <td>25.7</td>
          <td>...</td>
          <td>17.9</td>
          <td>18.9</td>
          <td>24.0</td>
          <td>22.7</td>
          <td>22.3</td>
          <td>19.6</td>
          <td>16.9</td>
          <td>21.6</td>
          <td>22.6</td>
          <td>19.9</td>
        </tr>
        <tr>
          <th>2001</th>
          <td>18.2</td>
          <td>13.9</td>
          <td>16.9</td>
          <td>24.9</td>
          <td>15.9</td>
          <td>21.9</td>
          <td>22.2</td>
          <td>18.4</td>
          <td>20.5</td>
          <td>22.4</td>
          <td>...</td>
          <td>16.8</td>
          <td>17.8</td>
          <td>24.2</td>
          <td>23.7</td>
          <td>22.3</td>
          <td>19.8</td>
          <td>16.2</td>
          <td>21.1</td>
          <td>21.1</td>
          <td>17.9</td>
        </tr>
        <tr>
          <th>2002</th>
          <td>18.3</td>
          <td>13.6</td>
          <td>17.0</td>
          <td>24.4</td>
          <td>16.6</td>
          <td>23.3</td>
          <td>24.9</td>
          <td>17.1</td>
          <td>19.5</td>
          <td>25.1</td>
          <td>...</td>
          <td>16.1</td>
          <td>17.3</td>
          <td>24.7</td>
          <td>22.3</td>
          <td>22.0</td>
          <td>19.2</td>
          <td>16.7</td>
          <td>22.1</td>
          <td>22.6</td>
          <td>17.2</td>
        </tr>
      </tbody>
    </table>
    <p>3 rows × 25 columns</p>
    </div>



También se pueden hacer otras operaciones, como ordenar por columnas

.. code:: python

    tasa_natalidad.sort_values('natalidad_argentina', ascending=True)




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>natalidad_argentina</th>
          <th>natalidad_ciudad_autonoma_de_buenos_aires</th>
          <th>natalidad_buenos_aires</th>
          <th>natalidad_catamarca</th>
          <th>natalidad_cordoba</th>
          <th>natalidad_corrientes</th>
          <th>natalidad_chaco</th>
          <th>natalidad_chubut</th>
          <th>natalidad_entre_rios</th>
          <th>natalidad_formosa</th>
          <th>...</th>
          <th>natalidad_neuquen</th>
          <th>natalidad_rio_negro</th>
          <th>natalidad_salta</th>
          <th>natalidad_san_juan</th>
          <th>natalidad_san_luis</th>
          <th>natalidad_santa_cruz</th>
          <th>natalidad_santa_fe</th>
          <th>natalidad_santiago_del_estero</th>
          <th>natalidad_tucuman</th>
          <th>natalidad_tierra_del_fuego</th>
        </tr>
        <tr>
          <th>indice_tiempo</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>2018</th>
          <td>15.4</td>
          <td>11.6</td>
          <td>14.6</td>
          <td>16.4</td>
          <td>14.5</td>
          <td>18.0</td>
          <td>21.0</td>
          <td>14.3</td>
          <td>15.6</td>
          <td>19.8</td>
          <td>...</td>
          <td>15.6</td>
          <td>14.6</td>
          <td>18.2</td>
          <td>17.7</td>
          <td>14.2</td>
          <td>14.7</td>
          <td>14.8</td>
          <td>18.9</td>
          <td>16.9</td>
          <td>16.3</td>
        </tr>
        <tr>
          <th>2017</th>
          <td>16.0</td>
          <td>11.7</td>
          <td>15.4</td>
          <td>15.8</td>
          <td>15.0</td>
          <td>18.3</td>
          <td>19.8</td>
          <td>15.3</td>
          <td>16.3</td>
          <td>19.6</td>
          <td>...</td>
          <td>16.3</td>
          <td>16.0</td>
          <td>19.7</td>
          <td>18.1</td>
          <td>14.8</td>
          <td>17.0</td>
          <td>15.4</td>
          <td>18.8</td>
          <td>16.7</td>
          <td>16.9</td>
        </tr>
        <tr>
          <th>2016</th>
          <td>16.7</td>
          <td>13.1</td>
          <td>16.2</td>
          <td>16.7</td>
          <td>15.7</td>
          <td>18.5</td>
          <td>19.1</td>
          <td>16.6</td>
          <td>16.6</td>
          <td>19.4</td>
          <td>...</td>
          <td>17.9</td>
          <td>16.8</td>
          <td>19.4</td>
          <td>18.8</td>
          <td>15.5</td>
          <td>18.6</td>
          <td>16.3</td>
          <td>18.7</td>
          <td>17.5</td>
          <td>18.1</td>
        </tr>
        <tr>
          <th>2007</th>
          <td>17.8</td>
          <td>14.1</td>
          <td>17.7</td>
          <td>18.3</td>
          <td>16.3</td>
          <td>18.9</td>
          <td>18.4</td>
          <td>20.2</td>
          <td>16.9</td>
          <td>21.1</td>
          <td>...</td>
          <td>20.5</td>
          <td>18.9</td>
          <td>20.6</td>
          <td>20.8</td>
          <td>19.3</td>
          <td>23.8</td>
          <td>15.7</td>
          <td>19.4</td>
          <td>19.7</td>
          <td>20.8</td>
        </tr>
        <tr>
          <th>2006</th>
          <td>17.9</td>
          <td>14.6</td>
          <td>17.7</td>
          <td>18.3</td>
          <td>16.5</td>
          <td>18.7</td>
          <td>19.6</td>
          <td>20.0</td>
          <td>17.2</td>
          <td>21.4</td>
          <td>...</td>
          <td>20.5</td>
          <td>18.6</td>
          <td>21.0</td>
          <td>20.7</td>
          <td>20.2</td>
          <td>23.5</td>
          <td>15.8</td>
          <td>20.0</td>
          <td>18.5</td>
          <td>20.1</td>
        </tr>
        <tr>
          <th>2015</th>
          <td>17.9</td>
          <td>13.7</td>
          <td>17.3</td>
          <td>17.2</td>
          <td>16.4</td>
          <td>19.3</td>
          <td>22.7</td>
          <td>17.4</td>
          <td>17.8</td>
          <td>21.3</td>
          <td>...</td>
          <td>19.1</td>
          <td>18.2</td>
          <td>21.3</td>
          <td>20.5</td>
          <td>17.0</td>
          <td>19.8</td>
          <td>16.9</td>
          <td>20.5</td>
          <td>19.0</td>
          <td>19.9</td>
        </tr>
        <tr>
          <th>2012</th>
          <td>17.9</td>
          <td>14.2</td>
          <td>18.1</td>
          <td>15.0</td>
          <td>16.5</td>
          <td>18.6</td>
          <td>20.2</td>
          <td>20.2</td>
          <td>16.7</td>
          <td>21.0</td>
          <td>...</td>
          <td>19.1</td>
          <td>19.4</td>
          <td>20.2</td>
          <td>19.6</td>
          <td>16.0</td>
          <td>24.0</td>
          <td>16.3</td>
          <td>17.9</td>
          <td>18.7</td>
          <td>19.2</td>
        </tr>
        <tr>
          <th>2013</th>
          <td>17.9</td>
          <td>14.3</td>
          <td>17.8</td>
          <td>16.9</td>
          <td>16.0</td>
          <td>19.0</td>
          <td>19.9</td>
          <td>18.5</td>
          <td>17.3</td>
          <td>21.0</td>
          <td>...</td>
          <td>18.7</td>
          <td>17.9</td>
          <td>21.1</td>
          <td>20.6</td>
          <td>16.7</td>
          <td>19.7</td>
          <td>16.9</td>
          <td>18.8</td>
          <td>18.9</td>
          <td>19.8</td>
        </tr>
        <tr>
          <th>2001</th>
          <td>18.2</td>
          <td>13.9</td>
          <td>16.9</td>
          <td>24.9</td>
          <td>15.9</td>
          <td>21.9</td>
          <td>22.2</td>
          <td>18.4</td>
          <td>20.5</td>
          <td>22.4</td>
          <td>...</td>
          <td>16.8</td>
          <td>17.8</td>
          <td>24.2</td>
          <td>23.7</td>
          <td>22.3</td>
          <td>19.8</td>
          <td>16.2</td>
          <td>21.1</td>
          <td>21.1</td>
          <td>17.9</td>
        </tr>
        <tr>
          <th>2014</th>
          <td>18.2</td>
          <td>14.3</td>
          <td>17.9</td>
          <td>17.4</td>
          <td>16.8</td>
          <td>19.8</td>
          <td>20.2</td>
          <td>17.8</td>
          <td>17.8</td>
          <td>21.8</td>
          <td>...</td>
          <td>19.5</td>
          <td>17.9</td>
          <td>21.6</td>
          <td>21.3</td>
          <td>16.9</td>
          <td>19.8</td>
          <td>17.2</td>
          <td>19.8</td>
          <td>19.3</td>
          <td>20.5</td>
        </tr>
        <tr>
          <th>2002</th>
          <td>18.3</td>
          <td>13.6</td>
          <td>17.0</td>
          <td>24.4</td>
          <td>16.6</td>
          <td>23.3</td>
          <td>24.9</td>
          <td>17.1</td>
          <td>19.5</td>
          <td>25.1</td>
          <td>...</td>
          <td>16.1</td>
          <td>17.3</td>
          <td>24.7</td>
          <td>22.3</td>
          <td>22.0</td>
          <td>19.2</td>
          <td>16.7</td>
          <td>22.1</td>
          <td>22.6</td>
          <td>17.2</td>
        </tr>
        <tr>
          <th>2003</th>
          <td>18.4</td>
          <td>14.2</td>
          <td>17.3</td>
          <td>22.5</td>
          <td>17.5</td>
          <td>22.2</td>
          <td>20.9</td>
          <td>18.7</td>
          <td>19.8</td>
          <td>25.0</td>
          <td>...</td>
          <td>19.4</td>
          <td>18.6</td>
          <td>22.0</td>
          <td>22.2</td>
          <td>21.7</td>
          <td>21.9</td>
          <td>17.3</td>
          <td>17.8</td>
          <td>21.8</td>
          <td>20.8</td>
        </tr>
        <tr>
          <th>2005</th>
          <td>18.5</td>
          <td>14.5</td>
          <td>17.9</td>
          <td>19.7</td>
          <td>17.1</td>
          <td>20.2</td>
          <td>22.6</td>
          <td>19.2</td>
          <td>19.0</td>
          <td>23.5</td>
          <td>...</td>
          <td>20.0</td>
          <td>18.7</td>
          <td>22.5</td>
          <td>21.4</td>
          <td>19.9</td>
          <td>22.9</td>
          <td>16.3</td>
          <td>21.0</td>
          <td>19.9</td>
          <td>20.7</td>
        </tr>
        <tr>
          <th>2011</th>
          <td>18.5</td>
          <td>14.8</td>
          <td>18.8</td>
          <td>16.0</td>
          <td>16.9</td>
          <td>19.9</td>
          <td>22.6</td>
          <td>20.7</td>
          <td>17.2</td>
          <td>21.6</td>
          <td>...</td>
          <td>19.6</td>
          <td>19.8</td>
          <td>21.7</td>
          <td>19.9</td>
          <td>16.7</td>
          <td>25.0</td>
          <td>16.4</td>
          <td>20.2</td>
          <td>19.5</td>
          <td>18.6</td>
        </tr>
        <tr>
          <th>2009</th>
          <td>18.6</td>
          <td>14.6</td>
          <td>18.4</td>
          <td>17.4</td>
          <td>17.4</td>
          <td>19.9</td>
          <td>20.4</td>
          <td>21.3</td>
          <td>17.5</td>
          <td>21.9</td>
          <td>...</td>
          <td>20.9</td>
          <td>19.6</td>
          <td>21.0</td>
          <td>20.6</td>
          <td>18.2</td>
          <td>25.2</td>
          <td>16.5</td>
          <td>21.9</td>
          <td>19.1</td>
          <td>20.2</td>
        </tr>
        <tr>
          <th>2010</th>
          <td>18.7</td>
          <td>14.9</td>
          <td>18.9</td>
          <td>16.9</td>
          <td>17.2</td>
          <td>19.8</td>
          <td>21.2</td>
          <td>21.2</td>
          <td>17.4</td>
          <td>21.1</td>
          <td>...</td>
          <td>21.6</td>
          <td>20.0</td>
          <td>21.9</td>
          <td>19.8</td>
          <td>17.4</td>
          <td>26.0</td>
          <td>16.2</td>
          <td>19.9</td>
          <td>20.1</td>
          <td>18.8</td>
        </tr>
        <tr>
          <th>2008</th>
          <td>18.8</td>
          <td>15.1</td>
          <td>18.6</td>
          <td>18.6</td>
          <td>17.4</td>
          <td>19.7</td>
          <td>20.8</td>
          <td>21.4</td>
          <td>17.2</td>
          <td>22.6</td>
          <td>...</td>
          <td>21.0</td>
          <td>19.9</td>
          <td>21.4</td>
          <td>20.7</td>
          <td>19.3</td>
          <td>25.0</td>
          <td>16.9</td>
          <td>20.5</td>
          <td>19.9</td>
          <td>20.8</td>
        </tr>
        <tr>
          <th>2000</th>
          <td>19.0</td>
          <td>14.3</td>
          <td>17.5</td>
          <td>25.8</td>
          <td>17.2</td>
          <td>22.7</td>
          <td>25.8</td>
          <td>19.4</td>
          <td>21.3</td>
          <td>25.7</td>
          <td>...</td>
          <td>17.9</td>
          <td>18.9</td>
          <td>24.0</td>
          <td>22.7</td>
          <td>22.3</td>
          <td>19.6</td>
          <td>16.9</td>
          <td>21.6</td>
          <td>22.6</td>
          <td>19.9</td>
        </tr>
        <tr>
          <th>2004</th>
          <td>19.3</td>
          <td>14.9</td>
          <td>18.5</td>
          <td>20.6</td>
          <td>17.8</td>
          <td>22.7</td>
          <td>25.1</td>
          <td>19.3</td>
          <td>19.5</td>
          <td>26.5</td>
          <td>...</td>
          <td>19.8</td>
          <td>18.3</td>
          <td>23.9</td>
          <td>22.5</td>
          <td>21.9</td>
          <td>22.4</td>
          <td>17.6</td>
          <td>19.7</td>
          <td>21.0</td>
          <td>19.5</td>
        </tr>
      </tbody>
    </table>
    <p>19 rows × 25 columns</p>
    </div>



También se pueden filtrar los datos

.. code:: python

    tasa_natalidad[tasa_natalidad['natalidad_argentina'] > 18.5]




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>natalidad_argentina</th>
          <th>natalidad_ciudad_autonoma_de_buenos_aires</th>
          <th>natalidad_buenos_aires</th>
          <th>natalidad_catamarca</th>
          <th>natalidad_cordoba</th>
          <th>natalidad_corrientes</th>
          <th>natalidad_chaco</th>
          <th>natalidad_chubut</th>
          <th>natalidad_entre_rios</th>
          <th>natalidad_formosa</th>
          <th>...</th>
          <th>natalidad_neuquen</th>
          <th>natalidad_rio_negro</th>
          <th>natalidad_salta</th>
          <th>natalidad_san_juan</th>
          <th>natalidad_san_luis</th>
          <th>natalidad_santa_cruz</th>
          <th>natalidad_santa_fe</th>
          <th>natalidad_santiago_del_estero</th>
          <th>natalidad_tucuman</th>
          <th>natalidad_tierra_del_fuego</th>
        </tr>
        <tr>
          <th>indice_tiempo</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>2000</th>
          <td>19.0</td>
          <td>14.3</td>
          <td>17.5</td>
          <td>25.8</td>
          <td>17.2</td>
          <td>22.7</td>
          <td>25.8</td>
          <td>19.4</td>
          <td>21.3</td>
          <td>25.7</td>
          <td>...</td>
          <td>17.9</td>
          <td>18.9</td>
          <td>24.0</td>
          <td>22.7</td>
          <td>22.3</td>
          <td>19.6</td>
          <td>16.9</td>
          <td>21.6</td>
          <td>22.6</td>
          <td>19.9</td>
        </tr>
        <tr>
          <th>2004</th>
          <td>19.3</td>
          <td>14.9</td>
          <td>18.5</td>
          <td>20.6</td>
          <td>17.8</td>
          <td>22.7</td>
          <td>25.1</td>
          <td>19.3</td>
          <td>19.5</td>
          <td>26.5</td>
          <td>...</td>
          <td>19.8</td>
          <td>18.3</td>
          <td>23.9</td>
          <td>22.5</td>
          <td>21.9</td>
          <td>22.4</td>
          <td>17.6</td>
          <td>19.7</td>
          <td>21.0</td>
          <td>19.5</td>
        </tr>
        <tr>
          <th>2008</th>
          <td>18.8</td>
          <td>15.1</td>
          <td>18.6</td>
          <td>18.6</td>
          <td>17.4</td>
          <td>19.7</td>
          <td>20.8</td>
          <td>21.4</td>
          <td>17.2</td>
          <td>22.6</td>
          <td>...</td>
          <td>21.0</td>
          <td>19.9</td>
          <td>21.4</td>
          <td>20.7</td>
          <td>19.3</td>
          <td>25.0</td>
          <td>16.9</td>
          <td>20.5</td>
          <td>19.9</td>
          <td>20.8</td>
        </tr>
        <tr>
          <th>2009</th>
          <td>18.6</td>
          <td>14.6</td>
          <td>18.4</td>
          <td>17.4</td>
          <td>17.4</td>
          <td>19.9</td>
          <td>20.4</td>
          <td>21.3</td>
          <td>17.5</td>
          <td>21.9</td>
          <td>...</td>
          <td>20.9</td>
          <td>19.6</td>
          <td>21.0</td>
          <td>20.6</td>
          <td>18.2</td>
          <td>25.2</td>
          <td>16.5</td>
          <td>21.9</td>
          <td>19.1</td>
          <td>20.2</td>
        </tr>
        <tr>
          <th>2010</th>
          <td>18.7</td>
          <td>14.9</td>
          <td>18.9</td>
          <td>16.9</td>
          <td>17.2</td>
          <td>19.8</td>
          <td>21.2</td>
          <td>21.2</td>
          <td>17.4</td>
          <td>21.1</td>
          <td>...</td>
          <td>21.6</td>
          <td>20.0</td>
          <td>21.9</td>
          <td>19.8</td>
          <td>17.4</td>
          <td>26.0</td>
          <td>16.2</td>
          <td>19.9</td>
          <td>20.1</td>
          <td>18.8</td>
        </tr>
      </tbody>
    </table>
    <p>5 rows × 25 columns</p>
    </div>



y contabilizarlos con el método ``.count()``:

.. code:: python

    tasa_natalidad[tasa_natalidad['natalidad_argentina'] > 18.5].count()




.. parsed-literal::

    natalidad_argentina                          5
    natalidad_ciudad_autonoma_de_buenos_aires    5
    natalidad_buenos_aires                       5
    natalidad_catamarca                          5
    natalidad_cordoba                            5
    natalidad_corrientes                         5
    natalidad_chaco                              5
    natalidad_chubut                             5
    natalidad_entre_rios                         5
    natalidad_formosa                            5
    natalidad_jujuy                              5
    natalidad_la_pampa                           5
    natalidad_la_rioja                           5
    natalidad_mendoza                            5
    natalidad_misiones                           5
    natalidad_neuquen                            5
    natalidad_rio_negro                          5
    natalidad_salta                              5
    natalidad_san_juan                           5
    natalidad_san_luis                           5
    natalidad_santa_cruz                         5
    natalidad_santa_fe                           5
    natalidad_santiago_del_estero                5
    natalidad_tucuman                            5
    natalidad_tierra_del_fuego                   5
    dtype: int64



Graficando
~~~~~~~~~~

Los DataFrames de Pandas tienen integrados la funcionalidad para
graficar de ``matplotlib``, de modo tal que se pueden graficar los datos
rápidamente:

.. code:: python

    import matplotlib.pyplot as plt 
    
    tasa_natalidad.plot()
    plt.show()



.. image:: figuras/15_2_pandas_36_0.png


.. code:: python

    import plotly.express as px 
    
    fig = px.line(data_frame=tasa_natalidad)
    fig.show()




.. raw:: html

    <div>                            <div id="f70d7965-66c0-46cb-bbe3-f903d2f218ac" class="plotly-graph-div" style="height:525px; width:100%;"></div>            <script type="text/javascript">                require(["plotly"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("f70d7965-66c0-46cb-bbe3-f903d2f218ac")) {                    Plotly.newPlot(                        "f70d7965-66c0-46cb-bbe3-f903d2f218ac",                        [{"hovertemplate":"variable=natalidad_argentina\u003cbr\u003eindice_tiempo=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"natalidad_argentina","line":{"color":"#636efa","dash":"solid"},"marker":{"symbol":"circle"},"mode":"lines","name":"natalidad_argentina","orientation":"v","showlegend":true,"x":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018],"xaxis":"x","y":[19.0,18.2,18.3,18.4,19.3,18.5,17.9,17.8,18.8,18.6,18.7,18.5,17.9,17.9,18.2,17.9,16.7,16.0,15.4],"yaxis":"y","type":"scatter"},{"hovertemplate":"variable=natalidad_ciudad_autonoma_de_buenos_aires\u003cbr\u003eindice_tiempo=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"natalidad_ciudad_autonoma_de_buenos_aires","line":{"color":"#EF553B","dash":"solid"},"marker":{"symbol":"circle"},"mode":"lines","name":"natalidad_ciudad_autonoma_de_buenos_aires","orientation":"v","showlegend":true,"x":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018],"xaxis":"x","y":[14.3,13.9,13.6,14.2,14.9,14.5,14.6,14.1,15.1,14.6,14.9,14.8,14.2,14.3,14.3,13.7,13.1,11.7,11.6],"yaxis":"y","type":"scatter"},{"hovertemplate":"variable=natalidad_buenos_aires\u003cbr\u003eindice_tiempo=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"natalidad_buenos_aires","line":{"color":"#00cc96","dash":"solid"},"marker":{"symbol":"circle"},"mode":"lines","name":"natalidad_buenos_aires","orientation":"v","showlegend":true,"x":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018],"xaxis":"x","y":[17.5,16.9,17.0,17.3,18.5,17.9,17.7,17.7,18.6,18.4,18.9,18.8,18.1,17.8,17.9,17.3,16.2,15.4,14.6],"yaxis":"y","type":"scatter"},{"hovertemplate":"variable=natalidad_catamarca\u003cbr\u003eindice_tiempo=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"natalidad_catamarca","line":{"color":"#ab63fa","dash":"solid"},"marker":{"symbol":"circle"},"mode":"lines","name":"natalidad_catamarca","orientation":"v","showlegend":true,"x":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018],"xaxis":"x","y":[25.8,24.9,24.4,22.5,20.6,19.7,18.3,18.3,18.6,17.4,16.9,16.0,15.0,16.9,17.4,17.2,16.7,15.8,16.4],"yaxis":"y","type":"scatter"},{"hovertemplate":"variable=natalidad_cordoba\u003cbr\u003eindice_tiempo=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"natalidad_cordoba","line":{"color":"#FFA15A","dash":"solid"},"marker":{"symbol":"circle"},"mode":"lines","name":"natalidad_cordoba","orientation":"v","showlegend":true,"x":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018],"xaxis":"x","y":[17.2,15.9,16.6,17.5,17.8,17.1,16.5,16.3,17.4,17.4,17.2,16.9,16.5,16.0,16.8,16.4,15.7,15.0,14.5],"yaxis":"y","type":"scatter"},{"hovertemplate":"variable=natalidad_corrientes\u003cbr\u003eindice_tiempo=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"natalidad_corrientes","line":{"color":"#19d3f3","dash":"solid"},"marker":{"symbol":"circle"},"mode":"lines","name":"natalidad_corrientes","orientation":"v","showlegend":true,"x":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018],"xaxis":"x","y":[22.7,21.9,23.3,22.2,22.7,20.2,18.7,18.9,19.7,19.9,19.8,19.9,18.6,19.0,19.8,19.3,18.5,18.3,18.0],"yaxis":"y","type":"scatter"},{"hovertemplate":"variable=natalidad_chaco\u003cbr\u003eindice_tiempo=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"natalidad_chaco","line":{"color":"#FF6692","dash":"solid"},"marker":{"symbol":"circle"},"mode":"lines","name":"natalidad_chaco","orientation":"v","showlegend":true,"x":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018],"xaxis":"x","y":[25.8,22.2,24.9,20.9,25.1,22.6,19.6,18.4,20.8,20.4,21.2,22.6,20.2,19.9,20.2,22.7,19.1,19.8,21.0],"yaxis":"y","type":"scatter"},{"hovertemplate":"variable=natalidad_chubut\u003cbr\u003eindice_tiempo=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"natalidad_chubut","line":{"color":"#B6E880","dash":"solid"},"marker":{"symbol":"circle"},"mode":"lines","name":"natalidad_chubut","orientation":"v","showlegend":true,"x":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018],"xaxis":"x","y":[19.4,18.4,17.1,18.7,19.3,19.2,20.0,20.2,21.4,21.3,21.2,20.7,20.2,18.5,17.8,17.4,16.6,15.3,14.3],"yaxis":"y","type":"scatter"},{"hovertemplate":"variable=natalidad_entre_rios\u003cbr\u003eindice_tiempo=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"natalidad_entre_rios","line":{"color":"#FF97FF","dash":"solid"},"marker":{"symbol":"circle"},"mode":"lines","name":"natalidad_entre_rios","orientation":"v","showlegend":true,"x":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018],"xaxis":"x","y":[21.3,20.5,19.5,19.8,19.5,19.0,17.2,16.9,17.2,17.5,17.4,17.2,16.7,17.3,17.8,17.8,16.6,16.3,15.6],"yaxis":"y","type":"scatter"},{"hovertemplate":"variable=natalidad_formosa\u003cbr\u003eindice_tiempo=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"natalidad_formosa","line":{"color":"#FECB52","dash":"solid"},"marker":{"symbol":"circle"},"mode":"lines","name":"natalidad_formosa","orientation":"v","showlegend":true,"x":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018],"xaxis":"x","y":[25.7,22.4,25.1,25.0,26.5,23.5,21.4,21.1,22.6,21.9,21.1,21.6,21.0,21.0,21.8,21.3,19.4,19.6,19.8],"yaxis":"y","type":"scatter"},{"hovertemplate":"variable=natalidad_jujuy\u003cbr\u003eindice_tiempo=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"natalidad_jujuy","line":{"color":"#636efa","dash":"solid"},"marker":{"symbol":"circle"},"mode":"lines","name":"natalidad_jujuy","orientation":"v","showlegend":true,"x":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018],"xaxis":"x","y":[22.6,23.1,22.1,20.3,21.3,19.9,18.4,18.6,19.1,19.2,19.2,19.6,18.0,18.5,19.5,18.2,16.8,15.8,15.7],"yaxis":"y","type":"scatter"},{"hovertemplate":"variable=natalidad_la_pampa\u003cbr\u003eindice_tiempo=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"natalidad_la_pampa","line":{"color":"#EF553B","dash":"solid"},"marker":{"symbol":"circle"},"mode":"lines","name":"natalidad_la_pampa","orientation":"v","showlegend":true,"x":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018],"xaxis":"x","y":[18.1,17.2,16.7,18.3,17.4,16.9,16.5,16.2,16.5,16.3,16.2,15.6,15.4,16.8,16.5,15.17,15.1,14.3,13.5],"yaxis":"y","type":"scatter"},{"hovertemplate":"variable=natalidad_la_rioja\u003cbr\u003eindice_tiempo=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"natalidad_la_rioja","line":{"color":"#00cc96","dash":"solid"},"marker":{"symbol":"circle"},"mode":"lines","name":"natalidad_la_rioja","orientation":"v","showlegend":true,"x":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018],"xaxis":"x","y":[22.6,20.5,21.4,21.2,21.1,20.8,19.0,18.4,19.0,17.9,17.2,17.4,17.0,17.5,17.3,17.1,16.6,15.6,14.8],"yaxis":"y","type":"scatter"},{"hovertemplate":"variable=natalidad_mendoza\u003cbr\u003eindice_tiempo=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"natalidad_mendoza","line":{"color":"#ab63fa","dash":"solid"},"marker":{"symbol":"circle"},"mode":"lines","name":"natalidad_mendoza","orientation":"v","showlegend":true,"x":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018],"xaxis":"x","y":[19.2,19.1,16.9,17.5,18.4,18.8,19.0,19.3,20.2,19.7,19.3,19.2,18.4,18.7,19.4,18.8,17.5,16.3,15.4],"yaxis":"y","type":"scatter"},{"hovertemplate":"variable=natalidad_misiones\u003cbr\u003eindice_tiempo=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"natalidad_misiones","line":{"color":"#FFA15A","dash":"solid"},"marker":{"symbol":"circle"},"mode":"lines","name":"natalidad_misiones","orientation":"v","showlegend":true,"x":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018],"xaxis":"x","y":[25.8,24.2,22.9,24.1,26.4,23.0,19.9,20.4,23.1,23.7,22.2,19.3,22.3,22.0,23.4,22.8,21.0,21.1,20.2],"yaxis":"y","type":"scatter"},{"hovertemplate":"variable=natalidad_neuquen\u003cbr\u003eindice_tiempo=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"natalidad_neuquen","line":{"color":"#19d3f3","dash":"solid"},"marker":{"symbol":"circle"},"mode":"lines","name":"natalidad_neuquen","orientation":"v","showlegend":true,"x":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018],"xaxis":"x","y":[17.9,16.8,16.1,19.4,19.8,20.0,20.5,20.5,21.0,20.9,21.6,19.6,19.1,18.7,19.5,19.1,17.9,16.3,15.6],"yaxis":"y","type":"scatter"},{"hovertemplate":"variable=natalidad_rio_negro\u003cbr\u003eindice_tiempo=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"natalidad_rio_negro","line":{"color":"#FF6692","dash":"solid"},"marker":{"symbol":"circle"},"mode":"lines","name":"natalidad_rio_negro","orientation":"v","showlegend":true,"x":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018],"xaxis":"x","y":[18.9,17.8,17.3,18.6,18.3,18.7,18.6,18.9,19.9,19.6,20.0,19.8,19.4,17.9,17.9,18.2,16.8,16.0,14.6],"yaxis":"y","type":"scatter"},{"hovertemplate":"variable=natalidad_salta\u003cbr\u003eindice_tiempo=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"natalidad_salta","line":{"color":"#B6E880","dash":"solid"},"marker":{"symbol":"circle"},"mode":"lines","name":"natalidad_salta","orientation":"v","showlegend":true,"x":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018],"xaxis":"x","y":[24.0,24.2,24.7,22.0,23.9,22.5,21.0,20.6,21.4,21.0,21.9,21.7,20.2,21.1,21.6,21.3,19.4,19.7,18.2],"yaxis":"y","type":"scatter"},{"hovertemplate":"variable=natalidad_san_juan\u003cbr\u003eindice_tiempo=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"natalidad_san_juan","line":{"color":"#FF97FF","dash":"solid"},"marker":{"symbol":"circle"},"mode":"lines","name":"natalidad_san_juan","orientation":"v","showlegend":true,"x":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018],"xaxis":"x","y":[22.7,23.7,22.3,22.2,22.5,21.4,20.7,20.8,20.7,20.6,19.8,19.9,19.6,20.6,21.3,20.5,18.8,18.1,17.7],"yaxis":"y","type":"scatter"},{"hovertemplate":"variable=natalidad_san_luis\u003cbr\u003eindice_tiempo=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"natalidad_san_luis","line":{"color":"#FECB52","dash":"solid"},"marker":{"symbol":"circle"},"mode":"lines","name":"natalidad_san_luis","orientation":"v","showlegend":true,"x":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018],"xaxis":"x","y":[22.3,22.3,22.0,21.7,21.9,19.9,20.2,19.3,19.3,18.2,17.4,16.7,16.0,16.7,16.9,17.0,15.5,14.8,14.2],"yaxis":"y","type":"scatter"},{"hovertemplate":"variable=natalidad_santa_cruz\u003cbr\u003eindice_tiempo=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"natalidad_santa_cruz","line":{"color":"#636efa","dash":"solid"},"marker":{"symbol":"circle"},"mode":"lines","name":"natalidad_santa_cruz","orientation":"v","showlegend":true,"x":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018],"xaxis":"x","y":[19.6,19.8,19.2,21.9,22.4,22.9,23.5,23.8,25.0,25.2,26.0,25.0,24.0,19.7,19.8,19.8,18.6,17.0,14.7],"yaxis":"y","type":"scatter"},{"hovertemplate":"variable=natalidad_santa_fe\u003cbr\u003eindice_tiempo=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"natalidad_santa_fe","line":{"color":"#EF553B","dash":"solid"},"marker":{"symbol":"circle"},"mode":"lines","name":"natalidad_santa_fe","orientation":"v","showlegend":true,"x":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018],"xaxis":"x","y":[16.9,16.2,16.7,17.3,17.6,16.3,15.8,15.7,16.9,16.5,16.2,16.4,16.3,16.9,17.2,16.9,16.3,15.4,14.8],"yaxis":"y","type":"scatter"},{"hovertemplate":"variable=natalidad_santiago_del_estero\u003cbr\u003eindice_tiempo=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"natalidad_santiago_del_estero","line":{"color":"#00cc96","dash":"solid"},"marker":{"symbol":"circle"},"mode":"lines","name":"natalidad_santiago_del_estero","orientation":"v","showlegend":true,"x":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018],"xaxis":"x","y":[21.6,21.1,22.1,17.8,19.7,21.0,20.0,19.4,20.5,21.9,19.9,20.2,17.9,18.8,19.8,20.5,18.7,18.8,18.9],"yaxis":"y","type":"scatter"},{"hovertemplate":"variable=natalidad_tucuman\u003cbr\u003eindice_tiempo=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"natalidad_tucuman","line":{"color":"#ab63fa","dash":"solid"},"marker":{"symbol":"circle"},"mode":"lines","name":"natalidad_tucuman","orientation":"v","showlegend":true,"x":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018],"xaxis":"x","y":[22.6,21.1,22.6,21.8,21.0,19.9,18.5,19.7,19.9,19.1,20.1,19.5,18.7,18.9,19.3,19.0,17.5,16.7,16.9],"yaxis":"y","type":"scatter"},{"hovertemplate":"variable=natalidad_tierra_del_fuego\u003cbr\u003eindice_tiempo=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"natalidad_tierra_del_fuego","line":{"color":"#FFA15A","dash":"solid"},"marker":{"symbol":"circle"},"mode":"lines","name":"natalidad_tierra_del_fuego","orientation":"v","showlegend":true,"x":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018],"xaxis":"x","y":[19.9,17.9,17.2,20.8,19.5,20.7,20.1,20.8,20.8,20.2,18.8,18.6,19.2,19.8,20.5,19.9,18.1,16.9,16.3],"yaxis":"y","type":"scatter"}],                        {"template":{"data":{"histogram2dcontour":[{"type":"histogram2dcontour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"choropleth":[{"type":"choropleth","colorbar":{"outlinewidth":0,"ticks":""}}],"histogram2d":[{"type":"histogram2d","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmap":[{"type":"heatmap","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmapgl":[{"type":"heatmapgl","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"contourcarpet":[{"type":"contourcarpet","colorbar":{"outlinewidth":0,"ticks":""}}],"contour":[{"type":"contour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"surface":[{"type":"surface","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"mesh3d":[{"type":"mesh3d","colorbar":{"outlinewidth":0,"ticks":""}}],"scatter":[{"fillpattern":{"fillmode":"overlay","size":10,"solidity":0.2},"type":"scatter"}],"parcoords":[{"type":"parcoords","line":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolargl":[{"type":"scatterpolargl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"scattergeo":[{"type":"scattergeo","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolar":[{"type":"scatterpolar","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"scattergl":[{"type":"scattergl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatter3d":[{"type":"scatter3d","line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattermapbox":[{"type":"scattermapbox","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterternary":[{"type":"scatterternary","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattercarpet":[{"type":"scattercarpet","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"pie":[{"automargin":true,"type":"pie"}]},"layout":{"autotypenumbers":"strict","colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"hovermode":"closest","hoverlabel":{"align":"left"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"bgcolor":"#E5ECF6","angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"ternary":{"bgcolor":"#E5ECF6","aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]]},"xaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"yaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"geo":{"bgcolor":"white","landcolor":"#E5ECF6","subunitcolor":"white","showland":true,"showlakes":true,"lakecolor":"white"},"title":{"x":0.05},"mapbox":{"style":"light"}}},"xaxis":{"anchor":"y","domain":[0.0,1.0],"title":{"text":"indice_tiempo"}},"yaxis":{"anchor":"x","domain":[0.0,1.0],"title":{"text":"value"}},"legend":{"title":{"text":"variable"},"tracegroupgap":0},"margin":{"t":60}},                        {"responsive": true}                    ).then(function(){
    
    var gd = document.getElementById('f70d7965-66c0-46cb-bbe3-f903d2f218ac');
    var x = new MutationObserver(function (mutations, observer) {{
            var display = window.getComputedStyle(gd).display;
            if (!display || display === 'none') {{
                console.log([gd, 'removed!']);
                Plotly.purge(gd);
                observer.disconnect();
            }}
    }});
    
    // Listen for the removal of the full notebook cells
    var notebookContainer = gd.closest('#notebook-container');
    if (notebookContainer) {{
        x.observe(notebookContainer, {childList: true});
    }}
    
    // Listen for the clearing of the current output cell
    var outputEl = gd.closest('.output');
    if (outputEl) {{
        x.observe(outputEl, {childList: true});
    }}
    
                            })                };                });            </script>        </div>


Ejercicios 15 (a)
-----------------

En el archivo ``data/imdb_top_1000.csv`` está la lista de las 1000
‘mejores’ peliculas de acuerdo a lo que refiere dicha plataforma.

-  Lea el archivo con Pandas.
-  Inspeccione el ``DataFrame`` con funciones de pandas (``head``,
   ``columns`` pueden ser métodos útiles).
-  ¿Cuál es la película más antigua que figura en este ranking?
-  Encuentre la ‘mejor’ película de acuerdo al índice ``Meta_score``.
   (Busque la documentación del método ``iloc`` de la clase
   ``DataFrame`` de pandas)
-  Encuentre la película más larga en la tabla (recuerde que el método
   ``max`` opera sobre números. Busque información sobre el método
   ``str`` de un ``DataFrame``)
-  Construya una función ``del_director`` que recibe un string con el
   nombre (posiblemente parcial) de un director y devuelve una lista de
   sus películas (``str`` puede serle también aquí útil).
Animaciones con **Matploblib**
------------------------------

**Matplotlib** tiene funciones para hacer animaciones de una manera
conveniente. Hay excelente información sobre el tema en:

-  `La documentación (con
   ejemplos) <http://matplotlib.org/api/animation_api.html>`__
-  `Tutorial en Pythonic
   Perambulations <http://jakevdp.github.io/blog/2012/08/18/matplotlib-animation-tutorial/>`__

Vamos a ver brevemente cómo hacer animaciones, en pocos Pasos

Una animación simple en pocos pasos
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: python

    pwd




.. parsed-literal::

    '/home/fiol/Clases/IntPython/clases-python/clases'



.. code:: python

    %cd "./scripts/animaciones"


.. parsed-literal::

    /home/fiol/Clases/IntPython/clases-python/clases/scripts/animaciones


.. code:: python

    %matplotlib tk
    %run ejemplo_animation_1.py

.. code:: python


   import numpy as np
   import matplotlib.pyplot as plt
   import matplotlib.animation as animation
   plt.ioff()
   # Creamos los datos
   xmax = 2*np.pi
   Npts= 50

   x = np.linspace(0, xmax, Npts)
   data = np.vstack([x, np.sin(x)])

   def update_line(num, data, line):
     line.set_data(data[:, :num])
     return (line,)

   # Creamos la figura e inicializamos
   # Graficamos una línea sin ningún punto
   # Fijamos las condiciones de graficación
   fig1, ax = plt.subplots(figsize=(12,8))
   L, = plt.plot([], [], '-o') # equivalente a la siguiente
   # L = plt.plot([],[] , '-o')[0]
   ax.set_xlim(0, xmax)
   ax.set_ylim(-1.1, 1.1)
   ax.set_xlabel('x')
   ax.set_title('Animación de una oscilación')


   # 
   line_ani = animation.FuncAnimation(fig1, update_line, Npts, fargs=(data, L), interval=100, blit=True)

   plt.show()

Este código da como resultado una función oscilante que se va creando.
Este es un ejemplo simple que puede ser útil para graficar datos de una
medición o de un cálculo más o menos largo.

.. image:: figuras/line.gif

Preparación general
^^^^^^^^^^^^^^^^^^^

Como vemos, después de importar el submódulo ``animation`` (además de lo
usual):

.. code:: python

   import numpy as np
   import matplotlib.pyplot as plt
   import matplotlib.animation as animation
   plt.ioff()

nos aseguramos que estamos trabajando en modo **no** interactivo (con
``plt.ioff()``).

Creamos los datos para graficar
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Creación de datos para graficar

Creamos los datos para mostrar en la animación.

.. code:: python

   xmax = 2*np.pi
   Npts = 50
   x = np.linspace(0, xmax, Npts)
   data = np.vstack([x, np.sin(x)])

Acá ``data`` es un array 2D, con los datos :math:`x`, :math:`y`.

Preparación de la figura
^^^^^^^^^^^^^^^^^^^^^^^^

A continuación preparamos la zona de graficación:

1. Creamos la figura y eje
2. Creamos las líneas de graficación (una en este caso)
3. Fijamos los límites de graficación
4. Agregamos el texto, que va a ser invariante durante la animación

.. code:: python

   fig1, ax = plt.subplots(figsize=(12,8))
   L, = plt.plot([0], [0], '-o', lw=3)
   ax.set_xlim(0, xmax)
   ax.set_ylim(-1.1, 1.1)
   ax.set_xlabel('x')
   ax.set_title('Animación de una oscilación')

Como sabemos, el llamado a ``plot()`` devuelve una lista de líneas (de
un solo elemento). A este elemento lo llamamos ``L``, y ya le damos las
características que queremos que tenga. En este caso, fijamos el símbolo
(círculos), con líneas de ancho 3. Vamos a modificar esta línea ``L`` en
cada cuadro de la animación.

Función para actualizar la línea
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Debemos crear una función que modifique las curvas en cada cuadro.

.. code:: python

   def update_line(num, data, line):
     line.set_data(data[:, :num])
     return line,

Esta función debe recibir como argumento el número de cuadro, que acá
llamamos ``num``. Además, en este caso recibe los datos a graficar, y la
línea a modificar.

Esta función devuelve una línea ``L``, que es la parte del gráfico que
queremos que se actualice en cada frame.

Notemos acá que no es necesario que tome como argumento los datos
guardados en ``data`` y la línea ``line``, ya que son variables globales
a las que hay acceso dentro del *script*. De la misma manera no es
necesario que devuelva la línea, por la misma razón.

Animación de la figura
^^^^^^^^^^^^^^^^^^^^^^

Finalmente llamamos a la función que hace la animación:
``animation.FuncAnimation()``

.. code:: python

    
    import numpy as np
    import matplotlib.pyplot as plt
    import matplotlib.animation as animation
    np.info(animation.FuncAnimation)


.. parsed-literal::

     FuncAnimation(fig, func, frames=None, init_func=None, fargs=None,
                   save_count=None, *, cache_frame_data=True, **kwargs)
    
    Makes an animation by repeatedly calling a function *func*.
    
    .. note::
    
        You must store the created Animation in a variable that lives as long
        as the animation should run. Otherwise, the Animation object will be
        garbage-collected and the animation stops.
    
    Parameters
    ----------
    fig : `~matplotlib.figure.Figure`
        The figure object used to get needed events, such as draw or resize.
    
    func : callable
        The function to call at each frame.  The first argument will
        be the next value in *frames*.   Any additional positional
        arguments can be supplied via the *fargs* parameter.
    
        The required signature is::
    
            def func(frame, *fargs) -> iterable_of_artists
    
        If ``blit == True``, *func* must return an iterable of all artists
        that were modified or created. This information is used by the blitting
        algorithm to determine which parts of the figure have to be updated.
        The return value is unused if ``blit == False`` and may be omitted in
        that case.
    
    frames : iterable, int, generator function, or None, optional
        Source of data to pass *func* and each frame of the animation
    
        - If an iterable, then simply use the values provided.  If the
          iterable has a length, it will override the *save_count* kwarg.
    
        - If an integer, then equivalent to passing ``range(frames)``
    
        - If a generator function, then must have the signature::
    
             def gen_function() -> obj
    
        - If *None*, then equivalent to passing ``itertools.count``.
    
        In all of these cases, the values in *frames* is simply passed through
        to the user-supplied *func* and thus can be of any type.
    
    init_func : callable, optional
        A function used to draw a clear frame. If not given, the results of
        drawing from the first item in the frames sequence will be used. This
        function will be called once before the first frame.
    
        The required signature is::
    
            def init_func() -> iterable_of_artists
    
        If ``blit == True``, *init_func* must return an iterable of artists
        to be re-drawn. This information is used by the blitting algorithm to
        determine which parts of the figure have to be updated.  The return
        value is unused if ``blit == False`` and may be omitted in that case.
    
    fargs : tuple or None, optional
        Additional arguments to pass to each call to *func*.
    
    save_count : int, default: 100
        Fallback for the number of values from *frames* to cache. This is
        only used if the number of frames cannot be inferred from *frames*,
        i.e. when it's an iterator without length or a generator.
    
    interval : int, default: 200
        Delay between frames in milliseconds.
    
    repeat_delay : int, default: 0
        The delay in milliseconds between consecutive animation runs, if
        *repeat* is True.
    
    repeat : bool, default: True
        Whether the animation repeats when the sequence of frames is completed.
    
    blit : bool, default: False
        Whether blitting is used to optimize drawing.  Note: when using
        blitting, any animated artists will be drawn according to their zorder;
        however, they will be drawn on top of any previous artists, regardless
        of their zorder.
    
    cache_frame_data : bool, default: True
        Whether frame data is cached.  Disabling cache might be helpful when
        frames contain large objects.
    
    
    Methods:
    
      new_frame_seq  --  Return a new sequence of frame information.
      new_saved_frame_seq  --  Return a new sequence of saved/cached frame information.
      pause  --  Pause the animation.
      resume  --  Resume the animation.
      save  --  Save the animation as a movie file by drawing every frame.
      to_html5_video  --  Convert the animation to an HTML5 ``<video>`` tag.
      to_jshtml  --  Generate HTML representation of the animation.


.. code:: python

   line_anim = animation.FuncAnimation(fig1, update_line, Npts, 
                      fargs=(data, L), interval=100, blit=True)

La función ``FuncAnimation()`` toma como argumentos:

-  la figura (``fig1``) donde se realiza el gráfico.

-  Una función a la que llama antes de dibujar cada *frame*
   (``update_line``),

-  El argumento ``interval`` da el tiempo entre cuadros, en
   milisegundos.

-  El argumento ``fargs`` es una tuple con los argumentos que necesita
   la función ``update_line()``. En este caso ``(data, L)``.

-  El argumento ``blit=True`` hace que sólo se actualicen las partes que
   cambian en la animación, mientras que las partes estáticas no se
   dibujan en cada cuadro.

Es importante que el objeto creado por ``FuncAnimation()`` no se
destruya. Esto lo podemos asegurar asignando el objeto resultante a una
variable, en este caso line_anim.

Opcional: grabar la animación a un archivo
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Podemos grabar la animación a un archivo usando el método ``save()`` o
el método ``to_html5_video()`` del objeto (``anim``) que devuelve la
función ``FuncAnimation()``.

Para poder grabar a archivo las animaciones se necesita tener instalados
programas externos (alguno de *ffmpeg*, *avconv*, *imagemagick*). Ver
https://matplotlib.org/api/animation_api.html para más información.

Segundo ejemplo
~~~~~~~~~~~~~~~

Veamos un ejemplo similar al primero, pero donde vamos cambiando los
límites de los ejes en forma manual, a medida que los datos lo requieren

.. code:: python

   import numpy as np
   import matplotlib.pyplot as plt
   import matplotlib.animation as animation

   # Calcula los datos en tiempo real. 
   def data_gen(t=0):
     cnt = 0
     while cnt < 1000:
       cnt += 1
       t += 0.1
       yield t, np.sin(2 * np.pi * t) * np.exp(-t / 10.)


   # Necesitamos que se puede acceder a estas variables
   # desde varias funciones -> globales
   fig, ax = plt.subplots()
   line, = ax.plot([], [], lw=2)
   xdata, ydata = [], []

   def init():
     ax.grid()
     ax.set_ylim(-1.1, 1.1)
     ax.set_xlim(0, 10)
     del xdata[:]
     del ydata[:]
     line.set_data(xdata, ydata)
     return line,


   def run(data):
     # update the data
     t, y = data
     xdata.append(t)
     ydata.append(y)
     xmin, xmax = ax.get_xlim()

     # Si los datos salen del eje, agrandamos el eje
     # Después tenemos que redibujar el canvas manualmente
     if t >= xmax:
       ax.set_xlim(xmin, 2 * xmax)
       ax.figure.canvas.draw()
     line.set_data(xdata, ydata)

     return line,

   ani = animation.FuncAnimation(fig, run, data_gen, blit=False,
                                 interval=30,repeat=False, init_func=init)

   plt.show()

.. code:: python

    %run animate_decay.py


.. parsed-literal::

    /home/fiol/Clases/IntPython/clases-python/clases/scripts/animaciones/animate_decay.py:46: UserWarning: frames=<function data_gen at 0x7ff058744900> which we can infer the length of, did not pass an explicit *save_count* and passed cache_frame_data=True.  To avoid a possibly unbounded cache, frame data caching has been disabled. To suppress this warning either pass `cache_frame_data=False` or `save_count=MAX_FRAMES`.
      ani = animation.FuncAnimation(fig, run, data_gen, blit=False, interval=30,


.. code:: python

    plt.style.reload_library()
    plt.style.use('default')

Tercer ejemplo: Quiver
~~~~~~~~~~~~~~~~~~~~~~

Para hacer una animación de un campo de fuerzas o velocidades
necesitamos datos en tres dimensiones. El siguiente ejemplo sigue los
pasos de la animación anterior, excepto en la creación de datos y la
graficación, que en lugar de usar ``plot()`` usa ``quiver()``:

.. code:: python


   import numpy as np
   import matplotlib.pyplot as plt
   import matplotlib.animation as animation
   plt.style.use('ggplot')

   plt.ioff()

   # ############################################################
   # Creación de datos
   x = np.linspace(-3, 3, 91)
   t = np.linspace(0, 25, 30)
   y = np.linspace(-3, 3, 91)
   X3, Y3, T3 = np.meshgrid(x, y, t)
   sinT3 = np.sin(2*np.pi*T3 /
                  T3.max(axis=2)[..., np.newaxis])

   G = (X3**2 + Y3**2)*sinT3
   # Graficar una flecha cada step puntos
   step = 10
   x_q, y_q = x[::step], y[::step]
    
   # Create U and V vectors to plot
   U = G[::step, ::step, :-1].copy()
   V = np.roll(U, shift=3, axis=2)

   # ############################################################
   # Figura y ejes. 
   fig1, ax = plt.subplots(figsize=(12,8))

   ax.set_aspect('equal')
    
   ax.set(xlim=(-4, 4), ylim=(-4, 4))

    
   qax = ax.quiver(x_q, y_q, U[..., 0], V[..., 0],
                   scale=100)
    
   def animate(i):
     qax.set_UVC(U[..., i], V[..., i])

   anim = animation.FuncAnimation(fig1, animate, interval=100, frames=len(t)-1, repeat=True)

   # anim.save('quiver.gif', writer='imagemagick')
   anim.save('quiver.mp4')
   plt.show()

.. code:: python

    %run ejemplo_quiver.py

.. image:: figuras/quiver.gif

Comentarios:
^^^^^^^^^^^^

-  Se utilizó la función ``quiver()`` para generar un campo vectorial.
   La forma de esta función es:

   quiver([X, Y], U, V, [C], \**kw)

   *X*, *Y* define the arrow locations, *U*, *V* define the arrow
   directions, and *C* optionally sets the color.

-  Se utilizaron *Ellipsis*, por ejemplo en casos como:

   .. code:: python

      U[..., 0]

   Las elipsis (tres puntos o la palabra ``Ellipsis``) indican todo el
   rango para todas las dimensiones que no se dan explícitamente. En
   este ejemplo el *array* ``U`` tiene tres dimensiones, por lo que
   tendremos:

   .. code:: python

      U[..., 0] = U[:, :, 0]

   En general, las elipses reemplazan a los dos puntos en todas las
   dimensiones no dadas explícitamente

.. code:: python

    a = np.arange(36)
    a2 = a.reshape((6,-1))
    a4 = a.reshape((2,3,2,3))


.. code:: python

    print(a2[:,0])
    print(a2[..., 0])


.. parsed-literal::

    [ 0  6 12 18 24 30]
    [ 0  6 12 18 24 30]


.. code:: python

    print(a4[0,:,:,0])
    print(a4[0,...,0])


.. parsed-literal::

    [[ 0  3]
     [ 6  9]
     [12 15]]
    [[ 0  3]
     [ 6  9]
     [12 15]]


.. code:: python

    (a4[...,0] == a4[:,:,:,0]).all()




.. parsed-literal::

    True



-  Uso de ``np.roll(a, shift, axis=None)`` que mueve elementos una
   distancia ``shift`` a lo largo del eje ``axis``, y cuando pasan la
   última posición los reintroduce al principio. Por ejemplo, en una
   dimensión:

.. code:: python

    x = np.arange(10)
    print(x)
    print(np.roll(x, 2))


.. parsed-literal::

    [0 1 2 3 4 5 6 7 8 9]
    [8 9 0 1 2 3 4 5 6 7]


--------------

Ejercicios 15 (b)
-----------------

1. Utilizando **Matplotlib**:

   -  Hacer un gráfico donde dibuje una parábola :math:`y = x^{2}` en el
      rango :math:`[-5,5]`.
   -  En el mismo gráfico, agregar un círculo en :math:`x=-5`.
   -  El círculo debe moverse siguiendo la curva, como se muestra en la
      figura

   .. image:: figuras/pelota.gif

2. **Caída libre 2:** Realizar animaciones del ejercicio de caída libre,
   de forma tal que:

   -  La animación tenga un cartel indicando el tiempo, y la velocidad y
      altura correspondiente a ese tiempo.
   -  Agregar una “cola fantasma” a la partícula, que muestre posiciones
      anteriores.

--------------

.

